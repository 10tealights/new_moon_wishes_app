- content_for :title, t('.title')
.container.mx-auto
  .grid.place-items-center
    h1.place-items-center.mt-6.mb-2.text-xl.text-bold.bg-indigo-100.text-transparent.bg-clip-text.bg-gradient-to-r.from-purple-600.via-indigo-500.to-blue-600
    	| MY DECLARATIONS
  .grid.place-items-center
	  p.text-sm.text-indigo-400 宣言した願いごと
  .grid.place-items-center.mb-10
    - if @wishes.present?
      - @wishes.each do |wish|
        .card.shadow-lg.mt-5.w-4/5.lg:w-3/5.xl:max-w-2xl
          .p-1.bg-gradient-to-r.from-purple-600.via-indigo-500.to-blue-600
            p.text-indigo-50.text-center
              | #{wish.zodiac_sign.name_i18n}新月
            p.text-indigo-50.text-center.text-xs
              | (#{l(wish.moon.newmoon_time)})
          .p-2.text-indigo-700
            - wish.declarations.each do |dec|
              div class="flex rounded #{highlight(dec.come_true)}"
                p.mx-1 #{fullmoon_emoji_if(dec)}
                .flex-row
                  p.mt-1.leading-tight
                    | #{dec.message}
                  - if dec.is_shared?
                    i.fas.fa-lock-open.text-indigo-200.text-xs.mr-1
                  - else 
                    i.fas.fa-lock.text-indigo-200.text-xs.mr-1
                  - dec.tags.each do |tag|
                    .badge.badge-xs.mt-1.mr-1.bg-indigo-100.text-indigo-400.border-opacity-20
                      => tag.name
              .divider.m-0
            .p-2.mt-2.mb-4.bg-indigo-50.rounded
              - if wish.memo.present?
                .text-xs
                  = safe_join(wish.memo.split("\n"), tag(:br))
              - else
                p.text-xs.text-center
                  | 
                    【振り返るのは…】<br>
                    #{wish.zodiac_sign.name_i18n}満月(#{l(wish.moon.fullmoon_time)})がオススメです
            .card-actions.justify-center.my-2
              = button_to  wish_path(wish), method: :delete do
                button.btn.btn-sm.btn-outline.btn-error.font-light
                  | 削除
              = link_to edit_wish_path(wish) do
                button.btn.btn-sm.btn-outline.font-light
                  | 編集
              = link_to edit_reflection_path(wish) do
                button.btn.btn-sm.btn-outline.font-light
                  | 振り返る
              .flex-row
                = link_to '#' do
                  button.btn.btn-sm.btn-outline.font-light[disabled="disabled"]
                    | アファメーションをはじめる
            /.collapse
              input[type="checkbox"]
              .collapse-title.text-sm.font-medium.text-center
                | EDIT MENU
              .collapse-content
                .card-actions.justify-center.mt-3
                  = button_to  wish_path(wish), method: :delete do
                    button.btn.btn-sm.btn-outline.btn-error.font-light
                      | 削除
                  = link_to edit_wish_path(wish) do
                    button.btn.btn-sm.btn-outline.font-light
                      | 編集
                  = link_to edit_reflection_path(wish) do
                    button.btn.btn-sm.btn-outline.font-light
                      | 振り返る
                  .flex-row
                    = link_to edit_wish_path(wish) do
                      button.btn.btn-sm.btn-outline.font-light
                        | アファメーションをはじめる
                
    - else
      .grid.place-items-center.mb-10
        p.mt-10.text-indigo-900.text-center
          |
            まだ願いごとを宣言されていません<br>
            下記のボタンから宣言できます
        = link_to new_wish_path do
          .btn.btn-wide.mt-8
            | 願いごとを宣言する
        .divider.my-3.text-gray-400
          | OR
        = link_to cheers_path do
          .btn.btn-wide.mb-5
            | みんなの願いごとを見てみる

  .grid.place-items-center.my-5
    - if current_user.email&.include?('guest_') && @wishes.present?
      p.text-sm.text-indigo-400 この願いごとを記録した状態で
      = link_to edit_user_path(current_user) do
        button.btn.btn-sm.btn-outline.font-light.mt-2
          | ユーザー登録する